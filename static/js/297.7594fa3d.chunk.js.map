{"version":3,"file":"static/js/297.7594fa3d.chunk.js","mappings":"sKAcA,IAZyB,SAAC,GAAyC,IAAD,IAAtCA,MAAAA,OAAsC,MAA9B,GAA8B,MAA1BC,KAAAA,OAA0B,MAAnB,GAAmB,EAAfC,EAAe,EAAfA,SACjD,OACE,iBAAKC,UAAU,yCAAf,WACE,4BACE,eAAIA,UAAU,0CAAd,SAAyDH,KACzD,cAAGG,UAAU,uBAAb,SAAqCF,OAEtCC,O,mXCyBPE,EAAAA,MAAAA,SAAe,wBAAyBC,EAAAA,GAsSxC,UApSmB,WACjB,IAAQC,GAAaC,EAAAA,EAAAA,KAAbD,SAEFE,GADYC,EAAAA,EAAAA,MAAVC,MACaC,GACrB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAQIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,WACNC,cAAe,KATfC,EADF,EACEA,aACAC,EAFF,EAEEA,QACAC,EAHF,EAGEA,MACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,UACAC,EANF,EAMEA,MANF,IAOEC,UAAaC,EAPf,EAOeA,QAASC,EAPxB,EAOwBA,cAMxBC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6FACOrB,EADP,wDAEQsB,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,EAAU,QAASxB,GAFxC,UAG4ByB,EAAAA,EAAAA,IAAOH,GAHnC,QAGQI,EAHR,QAIkBC,SACdV,EAAMS,EAAYC,QAClBrB,GAAW,UAAAoB,EAAYC,cAAZ,eAAoBtB,UAAW,IAC1CuB,IAAkB,UAAAF,EAAYC,cAAZ,eAAoBE,WAAY,KAPtD,4CADc,uBAAC,WAAD,wBAWdC,KACC,CAAC9B,EAAQiB,IACZ,IAAMc,EAAWf,EAAU,SACrBgB,EAAYhB,EAAU,cAC5B,GAOIiB,EAAAA,EAAAA,GAAiBlB,EAAUC,EAAWgB,GAzCnB,8CAmCrBE,EADF,EACEA,MACAC,EAFF,EAEEA,SACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,kBACAC,EALF,EAKEA,kBACAC,EANF,EAMEA,kBAxCqB,0CA2CvB,wFACc,OAARzC,QAAQ,IAARA,OAAA,EAAAA,EAAU0C,QAASC,EAAAA,GAAAA,MADzB,uBAEIC,IAAAA,KAAU,SAAU,sCAAuC,WAF/D,iCAKQpB,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,EAAU,QAASxB,GALxC,UAMQ2C,EAAAA,EAAAA,IAAUrB,EAAQ,CACtBY,MAAO,KAPX,4CA3CuB,uBAqDvBb,EAAAA,EAAAA,YAAU,WACRe,EAASL,KACR,CAACK,EAAUL,IAEd,IAAMa,GAAW9B,EAAM,OACjB+B,GAAc/B,EAAM,UAC1B,IAAoCV,EAAAA,EAAAA,UAAS,IAA7C,iBAAO0C,GAAP,MAAmBC,GAAnB,MACA,IAA4C3C,EAAAA,EAAAA,UAAS,IAArD,iBAAO4C,GAAP,MAAuBpB,GAAvB,OAGAP,EAAAA,EAAAA,YAAU,WAAM,wCACd,iGACQ4B,GAASC,EAAAA,EAAAA,IAAW1B,EAAAA,EAAU,cAC9B2B,GAAIC,EAAAA,EAAAA,IAAMH,GAAQI,EAAAA,EAAAA,IAAM,SAAU,KAAM,IAFhD,UAG8BC,EAAAA,EAAAA,IAAQH,GAHtC,OAGQI,EAHR,OAIMC,EAAS,GACbD,EAAcE,SAAQ,SAAClC,GACrBiC,EAAOE,MAAP,QACEvD,GAAIoB,EAAIpB,IACLoB,EAAII,YAIXoB,GAAcS,GAZhB,4CADc,uBAAC,WAAD,wBAedG,KACC,IAEH,IAAMC,GAAoB,mCAAG,WAAOC,GAAP,gFACrBZ,GAAS1B,EAAAA,EAAAA,IAAIC,EAAAA,EAAU,QAASqC,EAAK1D,IADhB,UAELsB,EAAAA,EAAAA,IAAOwB,GAFF,OAErBa,EAFqB,OAI3B/C,EAAS,YAAD,QACNZ,GAAI2D,EAAQ3D,IACT2D,EAAQnC,SAGbC,GAAkBiC,GATS,2CAAH,uDAY1BxC,EAAAA,EAAAA,YAAU,WACR0C,SAASvE,MAAQ,oCAChB,IACH,IAAMwE,GAAgB,mCAAG,WAAOC,GAAP,4EAClB9C,EADkB,yCACF,MADE,cAMjB+C,GANiB,UAMED,IACbE,OAASC,OAAOH,EAAOE,QACnCD,EAAYG,KAAOC,GAAAA,CAAQL,EAAOI,MAAQJ,EAAOzE,MAAO,CAAE+E,OAAO,IAR1C,SAUfjD,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,EAAU,QAASxB,GAVjB,UAWf2C,EAAAA,EAAAA,IAAUrB,GAAD,QAAC,UACX4C,GADU,IAEbM,WAAYN,EAAYrC,SAAS1B,GACjCE,QAASA,EACT6B,MAAAA,KAfmB,OAiBrBK,IACAkC,EAAAA,GAAAA,QAAc,4BAlBO,kDAoBrBC,QAAQC,IAAR,MACAF,EAAAA,GAAAA,MAAY,uBArBS,QAuBvBlC,IACAtB,EAAM,CACJzB,MAAO,GACP6E,KAAM,GACNF,OAAQ,EACRtC,SAAU,GACV+C,KAAK,EACL1C,MAAO,GACP2C,KAAM,KAERvE,EAAW,IACXsB,GAAkB,IAClBrB,EAAS,gBAnCc,0DAAH,sDAqChBuE,IAAUC,EAAAA,EAAAA,UACd,iBAAO,CACLC,QAAS,CACP,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,cACD,CAAC,CAAEC,OAAQ,GAAK,CAAEA,OAAQ,IAC1B,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,WAC9B,CAAC,CAAED,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAC9B,CAAC,OAAQ,UAEXE,cAAe,CACbC,OAAO,WAAD,wBAAE,WAAOC,GAAP,gFACAC,EAAe,IAAIC,UACZC,OAAO,QAASH,GAFvB,SAGiBI,GAAAA,CAAM,CAC3BC,OAAQ,OACRC,IAAK,sEACLhE,KAAM2D,EACNM,QAAS,CACP,eAAgB,wBARd,cAGAC,EAHA,yBAWCA,EAASlE,KAAKA,KAAKgE,KAXpB,2CAAF,mDAAC,OAeX,IAEF,OAAK3F,GAEH,iCACE,SAAC,IAAD,CACER,MAAM,cACNC,KAAI,+BAA0BO,MAEhC,kBAAM8F,SAAUlF,EAAaoD,IAA7B,WACE,gBAAKrE,UAAU,+DAAf,UACE,UAAC,IAAD,YACE,SAAC,IAAD,qBACA,SAAC,IAAD,CACEoG,SAAU1D,EACV1C,UAAU,aACVwC,SAAUA,EACVD,MAAOA,EACPI,kBAAmBA,UAIzB,iBAAK3C,UAAU,cAAf,WACE,UAAC,IAAD,YACE,SAAC,IAAD,qBACA,SAAC,EAAAqG,EAAD,CACEC,KAAK,QACLpF,QAASA,EACTqF,YAAY,yBAGhB,UAAC,IAAD,YACE,SAAC,IAAD,wBACA,UAAC,IAAD,YACE,SAAC,WAAD,CACEA,YAAW,WAAmB,OAAdlD,SAAc,IAAdA,QAAA,EAAAA,GAAgBiD,OAAQ,0BAE1C,SAAC,SAAD,UACGnD,GAAWqD,OAAS,GACnBrD,GAAWsD,KAAI,SAACvC,GAAD,OACb,SAAC,WAAD,CAEEwC,QAAS,kBAAMzC,GAAqBC,IAFtC,SAIGA,EAAKoC,MAHDpC,EAAK1D,mBAexB,gBAAKR,UAAU,eAAf,UACE,UAAC,IAAD,YACE,SAAC,IAAD,2BACA,SAAC,IAAD,CACEsG,KAAK,OACLpF,QAASA,EACTqF,YAAY,yBACZvG,UAAU,oBAIhB,iBAAKA,UAAU,QAAf,WACE,SAAC,IAAD,uBACA,gBAAKA,UAAU,uBAAf,UACE,SAAC,IAAD,CACEmF,QAASA,GACTwB,MAAM,OACNC,MAAOlG,EACP0F,SAAUzF,UAIhB,iBAAKX,UAAU,cAAf,WACE,UAAC,IAAD,YACE,SAAC,IAAD,2BACA,SAAC,IAAD,CACE6G,IAAiB,IAAb5D,GACJyD,QAAS,kBAAMtF,EAAS,OAAQ6B,YAG1B,OAAR9C,QAAQ,IAARA,OAAA,EAAAA,EAAU0C,QAASC,EAAAA,GAAAA,QACX,OAAR3C,QAAQ,IAARA,OAAA,EAAAA,EAAU0C,QAASC,EAAAA,GAAAA,OACnB,UAAC,IAAD,YACE,SAAC,IAAD,sBACA,iBAAK9C,UAAU,4BAAf,WACE,SAAC,IAAD,CACEsG,KAAK,SACLpF,QAASA,EACT4F,QAASrC,OAAOvB,MAAiB6D,EAAAA,GAAAA,SACjCH,MAAOG,EAAAA,GAAAA,SAJT,uBAQA,SAAC,IAAD,CACET,KAAK,SACLpF,QAASA,EACT4F,QAASrC,OAAOvB,MAAiB6D,EAAAA,GAAAA,QACjCH,MAAOG,EAAAA,GAAAA,QAJT,sBAQA,SAAC,IAAD,CACET,KAAK,SACLpF,QAASA,EACT4F,QAASrC,OAAOvB,MAAiB6D,EAAAA,GAAAA,SACjCH,MAAOG,EAAAA,GAAAA,SAJT,8BAaR,SAAC,IAAD,CACEC,KAAK,SACLhH,UAAU,oBACViH,UAAWxF,EACXyF,SAAUzF,EAJZ,+BAtHc","sources":["module/dashboard/DashboardHeading.js","module/post/PostUpdate.js"],"sourcesContent":["import React from \"react\";\n\nconst DashboardHeading = ({ title = \"\", desc = \"\", children }) => {\n  return (\n    <div className=\"flex items-start justify-between mb-10\">\n      <div>\n        <h1 className=\"text-xl font-semibold dashboard-heading\">{title}</h1>\n        <p className=\"dashboard-short-desc\">{desc}</p>\n      </div>\n      {children}\n    </div>\n  );\n};\n\nexport default DashboardHeading;\n","import {\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  query,\n  updateDoc,\n  where,\n} from \"firebase/firestore\";\nimport React, { useMemo, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { Button } from \"../../components/button\";\nimport { Radio } from \"../../components/checkbox\";\nimport { Dropdown } from \"../../components/dropdown\";\nimport { Field } from \"../../components/field\";\nimport { Input } from \"../../components/input\";\nimport { Label } from \"../../components/label\";\nimport Toggle from \"../../components/toggle/Toggle\";\nimport UploadImage from \"../../components/uploadImage\";\nimport { database } from \"../../firebase/firebase-config\";\nimport useFirebaseImage from \"../../hooks/useFirebaseImage\";\nimport { postStatus, userRole } from \"../../utils/constants\";\nimport DashboardHeading from \"../dashboard/DashboardHeading\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { toast } from \"react-toastify\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport ImageUploader from \"quill-image-uploader\";\nimport axios from \"axios\";\nimport { useAuth } from \"../../context/auth-context\";\nimport Swal from \"sweetalert2\";\nimport Textarea from \"../../components/textarea/Textarea\";\nimport slugify from \"slugify\";\nQuill.register(\"modules/imageUploader\", ImageUploader);\n\nconst PostUpdate = () => {\n  const { userInfo } = useAuth();\n  const { state } = useLocation();\n  const postId = state.id;\n  const [content, setContent] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    handleSubmit,\n    control,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    formState: { isValid, isSubmitting },\n  } = useForm({\n    mode: \"onChange\",\n    defaultValues: {},\n  });\n  // get data from update\n  useEffect(() => {\n    async function fetchData() {\n      if (!postId) return;\n      const docRef = doc(database, \"posts\", postId);\n      const docSnapshot = await getDoc(docRef);\n      if (docSnapshot.data()) {\n        reset(docSnapshot.data());\n        setContent(docSnapshot.data()?.content || \"\");\n        setSelectCategory(docSnapshot.data()?.category || \"\");\n      }\n    }\n    fetchData();\n  }, [postId, reset]);\n  const imageUrl = getValues(\"image\");\n  const imageName = getValues(\"image_name\");\n  const {\n    image,\n    progress,\n    setImage,\n    handleSelectImage,\n    handleDeleteImage,\n    handleResetUpload,\n  } = useFirebaseImage(setValue, getValues, imageName, deleteImage);\n  // callback deleteImage\n  async function deleteImage() {\n    if (userInfo?.role !== userRole.ADMIN) {\n      Swal.fire(\"Failed\", \"You have no right to do this action\", \"warning\");\n      return;\n    }\n    const docRef = doc(database, \"posts\", postId);\n    await updateDoc(docRef, {\n      image: \"\",\n    });\n  }\n  useEffect(() => {\n    setImage(imageUrl);\n  }, [setImage, imageUrl]);\n\n  const watchHot = watch(\"hot\");\n  const watchStatus = watch(\"status\");\n  const [categories, setCategories] = useState([]);\n  const [selectCategory, setSelectCategory] = useState(\"\");\n\n  // get data category\n  useEffect(() => {\n    async function getData() {\n      const colRef = collection(database, \"categories\");\n      const q = query(colRef, where(\"status\", \"==\", 1));\n      const querySnapshot = await getDocs(q);\n      let result = [];\n      querySnapshot.forEach((doc) => {\n        result.push({\n          id: doc.id,\n          ...doc.data(),\n        });\n      });\n\n      setCategories(result);\n    }\n    getData();\n  }, []);\n  // select category name\n  const handleSelectCategory = async (item) => {\n    const colRef = doc(database, \"posts\", item.id);\n    const docData = await getDoc(colRef);\n\n    setValue(\"category\", {\n      id: docData.id,\n      ...docData.data(),\n    });\n\n    setSelectCategory(item);\n  };\n  // document title\n  useEffect(() => {\n    document.title = \"Sneaker Blogging - Update post \";\n  }, []);\n  const handleUpdatePost = async (values) => {\n    if (!isValid) return null;\n    // if (userInfo?.role !== userRole.ADMIN || userInfo?.role !== userRole.MOD) {\n    //   Swal.fire(\"Failed\", \"You have no right to do this action\", \"warning\");\n    //   return;\n    // }\n    const cloneValues = { ...values };\n    cloneValues.status = Number(values.status);\n    cloneValues.slug = slugify(values.slug || values.title, { lower: true });\n    try {\n      const docRef = doc(database, \"posts\", postId);\n      await updateDoc(docRef, {\n        ...cloneValues,\n        categoryId: cloneValues.category.id,\n        content: content,\n        image,\n      });\n      handleResetUpload();\n      toast.success(\"Update user successfully\");\n    } catch (error) {\n      console.log(error);\n      toast.error(\"Can not update user\");\n    }\n    handleResetUpload();\n    reset({\n      title: \"\",\n      slug: \"\",\n      status: 2,\n      category: {},\n      hot: false,\n      image: \"\",\n      user: {},\n    });\n    setContent({});\n    setSelectCategory({});\n    navigate(\"/manage/post\");\n  };\n  const modules = useMemo(\n    () => ({\n      toolbar: [\n        [\"bold\", \"italic\", \"underline\", \"strike\"],\n        [\"blockquote\"],\n        [{ header: 1 }, { header: 2 }], // custom button values\n        [{ list: \"ordered\" }, { list: \"bullet\" }],\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\n        [\"link\", \"image\"],\n      ],\n      imageUploader: {\n        upload: async (file) => {\n          const bodyFromData = new FormData();\n          bodyFromData.append(\"image\", file);\n          const response = await axios({\n            method: \"post\",\n            url: \"https://api.imgbb.com/1/upload?key=4bb6d43216f3a1e39a2b5d82fa69eeb1\",\n            data: bodyFromData,\n            headers: {\n              \"Content-Type\": \"mutipart/form-data\",\n            },\n          });\n          return response.data.data.url;\n        },\n      },\n    }),\n    []\n  );\n  if (!postId) return null;\n  return (\n    <>\n      <DashboardHeading\n        title=\"Update post\"\n        desc={`Your update post id: ${postId}`}\n      ></DashboardHeading>\n      <form onSubmit={handleSubmit(handleUpdatePost)}>\n        <div className=\"grid mb-5 sm:grid-cols-1 lg:grid-cols-1 lg:gap-x-10 lg:mb-10\">\n          <Field>\n            <Label>Image</Label>\n            <UploadImage\n              onChange={handleSelectImage}\n              className=\" h-[400px]\"\n              progress={progress}\n              image={image}\n              handleDeleteImage={handleDeleteImage}\n            ></UploadImage>\n          </Field>\n        </div>\n        <div className=\"form-layout\">\n          <Field>\n            <Label>Title</Label>\n            <Input\n              name=\"title\"\n              control={control}\n              placeholder=\"Enter your title\"\n            ></Input>\n          </Field>\n          <Field>\n            <Label>Category</Label>\n            <Dropdown>\n              <Dropdown.Select\n                placeholder={`${selectCategory?.name || \"Select at Categoris\"}`}\n              ></Dropdown.Select>\n              <Dropdown.List>\n                {categories.length > 0 &&\n                  categories.map((item) => (\n                    <Dropdown.Option\n                      key={item.id}\n                      onClick={() => handleSelectCategory(item)}\n                    >\n                      {item.name}\n                    </Dropdown.Option>\n                  ))}\n              </Dropdown.List>\n              {/* {selectCategory.name && (\n                <span className=\"inline-block p-3 mt-3 text-sm font-medium bg-gray-200 rounded-lg\">\n                  {selectCategory.name}\n                </span>\n              )} */}\n            </Dropdown>\n          </Field>\n        </div>\n        <div className=\"w-full my-10\">\n          <Field>\n            <Label>Description</Label>\n            <Textarea\n              name=\"desc\"\n              control={control}\n              placeholder=\"Enter your description\"\n              className=\"h-[100px]\"\n            ></Textarea>\n          </Field>\n        </div>\n        <div className=\"my-10\">\n          <Label>Content</Label>\n          <div className=\"w-full entry-content\">\n            <ReactQuill\n              modules={modules}\n              theme=\"snow\"\n              value={content}\n              onChange={setContent}\n            />\n          </div>\n        </div>\n        <div className=\"form-layout\">\n          <Field>\n            <Label>Feature Hot</Label>\n            <Toggle\n              on={watchHot === true}\n              onClick={() => setValue(\"hot\", !watchHot)}\n            ></Toggle>\n          </Field>\n          {(userInfo?.role === userRole.ADMIN ||\n            userInfo?.role === userRole.MOD) && (\n            <Field>\n              <Label>Status</Label>\n              <div className=\"flex items-center gap-x-5\">\n                <Radio\n                  name=\"status\"\n                  control={control}\n                  checked={Number(watchStatus) === postStatus.APPROVED}\n                  value={postStatus.APPROVED}\n                >\n                  Approved\n                </Radio>\n                <Radio\n                  name=\"status\"\n                  control={control}\n                  checked={Number(watchStatus) === postStatus.PENDING}\n                  value={postStatus.PENDING}\n                >\n                  Pending\n                </Radio>\n                <Radio\n                  name=\"status\"\n                  control={control}\n                  checked={Number(watchStatus) === postStatus.REJECTED}\n                  value={postStatus.REJECTED}\n                >\n                  Reject\n                </Radio>\n              </div>\n            </Field>\n          )}\n        </div>\n\n        <Button\n          type=\"submit\"\n          className=\"mx-auto w-[250px]\"\n          isLoading={isSubmitting}\n          disabled={isSubmitting}\n        >\n          Update post\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default PostUpdate;\n"],"names":["title","desc","children","className","Quill","ImageUploader","userInfo","useAuth","postId","useLocation","state","id","useState","content","setContent","navigate","useNavigate","useForm","mode","defaultValues","handleSubmit","control","watch","setValue","getValues","reset","formState","isValid","isSubmitting","useEffect","docRef","doc","database","getDoc","docSnapshot","data","setSelectCategory","category","fetchData","imageUrl","imageName","useFirebaseImage","image","progress","setImage","handleSelectImage","handleDeleteImage","handleResetUpload","role","userRole","Swal","updateDoc","watchHot","watchStatus","categories","setCategories","selectCategory","colRef","collection","q","query","where","getDocs","querySnapshot","result","forEach","push","getData","handleSelectCategory","item","docData","document","handleUpdatePost","values","cloneValues","status","Number","slug","slugify","lower","categoryId","toast","console","log","hot","user","modules","useMemo","toolbar","header","list","imageUploader","upload","file","bodyFromData","FormData","append","axios","method","url","headers","response","onSubmit","onChange","I","name","placeholder","length","map","onClick","theme","value","on","checked","postStatus","type","isLoading","disabled"],"sourceRoot":""}